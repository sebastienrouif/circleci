version: 2
jobs:
  build:
    working_directory: ~/code
    docker:
      - image: circleci/android:api-26-alpha
    environment:
      - _JAVA_OPTIONS: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"

      # Turn off Gradle Daemon
      #https://circleci.com/docs/1.0/oom/#out-of-memory-errors-in-android-builds
      - GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx2048m -XX:+HeapDumpOnOutOfMemoryError" -Dorg.gradle.daemon=false -Dorg.gradle.parallel=false -Dorg.gradle.configureondemand=false'
      - TERM: dumb

    steps:
      - checkout
      - run:
          name: Download Dependencies
          command: echo $FABRIC_API_SECRET >> "MyAppFolder/app/fabric.properties"
      - restore_cache:
          key: jars-{{ checksum "MyAppFolder/build.gradle" }}-{{ checksum  "MyAppFolder/app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
          working_directory: MyAppFolder
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "MyAppFolder/build.gradle" }}-{{ checksum  "MyAppFolder/app/build.gradle" }}
      - run:
          name: Run Lint
          command: ./gradlew lint
          working_directory: MyAppFolder
      - run:
          name: Run Tests
          command: ./gradlew test
          working_directory: MyAppFolder
      - run:
          name: build dev app
          command: ./gradlew assembleDebug crashlyticsUploadDistributionDebug 
          working_directory: MyAppFolder
      - run:
          name: build prod app
          command: ./gradlew assembleRelease crashlyticsUploadDistributionRelease
          working_directory: MyAppFolder
      - store_artifacts:
          path: MyAppFolder/app/build/outputs
          destination: outputs
      - store_artifacts:
          path: MyAppFolder/app/build/reports
          destination: reports
      - store_test_results:
          path: MyAppFolder/app/build/test-results

